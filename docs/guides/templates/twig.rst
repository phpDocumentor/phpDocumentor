Using Twig
==========

phpDocumentor provides the `Twig 2.x engine`_ as a rendering engine for templates.

.. _Twig 2.x engine: https://twig.symfony.com/doc/2.x/

Configuration
-------------

The Twig engine can be configured in your template's ``template.xml`` through the ``<parameters>`` tag.

.. code-block:: xml

    <template>
        <parameters>
            <parameter key="config-key">config-value</parameter>
        </parameters>
    </template>

Caching
~~~~~~~

phpDocumentor enables Twig's compilation cache by default. When developing Twig templates, you need to turn this off in your ``template.xml`` by enabling debug mode:

.. code-block:: xml

    <parameter key="twig-debug">true</parameter>

This will also make the Twig debug extension available, which provides the `dump()`_ function.

Reference
---------

.. container::

    .. container:: phpdocumentor-column -four

       Global Variables
       ~~~~~~~~~~~~~~~~

       * `project`_
       * `documentationSet`_
       * `node`_
       * `destinationPath`_
       * `env`_
       * `usesNamespaces`_
       * `usesPackages`_

    .. container:: phpdocumentor-column -four

       Filters
       ~~~~~~~

       * `markdown`_
       * `trans`_
       * `route`_
       * `sort_desc`_
       * `sort_asc`_
       * `sortByVisibility`_
       * `export`_
       * `description`_
       * `shortFQSEN`_

    .. container:: phpdocumentor-column -four

       Functions
       ~~~~~~~~~

       * `renderBaseUrlHeader`_
       * `path`_
       * `link`_
       * `breadcrumbs`_
       * `packages`_
       * `methods`_
       * `properties`_
       * `constants`_
       * `toc`_
       * `asset`_
       * `renderNode`_
       * `uml`_

Global Variables
~~~~~~~~~~~~~~~~

.. note::

   Parameters are also available as twig variables, this allows you to add static values from your configuration files
   in the rendered output. ``{{ parameter.param-key }}`` will give you the value of the parameter ``param-key``.

project
^^^^^^^

**type**: :php:class:`phpDocumentor\Descriptor\ProjectDescriptor`

This variable contains the top-level project data generated by phpDocumentor.

node
^^^^

**type**: Subclass of :php:class:`phpDocumentor\Descriptor\DescriptorAbstract` for API Documentation,
or :php:class:`\phpDocumentor\Guides\Nodes\Node` for reference documentation.

This variable contains the data from the transformation query. This will be one of the ``Descriptor`` classes matching
the object you query.

Functions
~~~~~~~~~

path
^^^^

.. code-block:: twig

    {{ path(relative_path) }}

``relative_path``
    **type**: ``string``

Returns the URL for the given path, relative to the current path.

Filters
~~~~~~~

markdown
^^^^^^^^

.. code-block:: twig

    {{ text|markdown }}

``text``
    **type**: ``string``

Renders Markdown text into HTML, using the `Parsedown`_ engine.

trans
^^^^^

.. code-block:: twig

    {{ message|trans(context = []) }}

``message``
    **type**: ``string``

``context`` *(optional)*
    **type**: ``array`` **default**: ``[]``

Renders the translation of the content. Variables in ``context`` are expanded into the translated text using ``vsprintf``.

route
^^^^^

.. code-block:: twig

    {{ node|route(presentation = 'normal') }}

``node``
    **type**: ``phpDocumentor\Descriptor\DescriptorAbstract``

``presentation`` *(optional)*
    **type**: ``string``
    **default**: ``normal``

.. docblock:: \phpDocumentor\Transformer\Writer\Twig\Extension::route()


Renders a link to the generated page for the node. ``presentation`` can be set to ``'url'`` to render only the URL.

sort_asc
^^^^^^^^

.. code-block:: twig

    {{ list|sort_asc }}

``list``
    **type**: ``array``

Sorts the given list in ascending order by name, case-insensitively. Uses the ``name`` of each node in the collection to sort. Typically used for sorting a ``phpDocumentor\Descriptor\Collection`` of descriptors.

sort_desc
^^^^^^^^^

.. code-block:: twig

    {{ list|sort_desc }}

``list``
    **type**: ``array``

Sorts the given list in descending order by name, case-insensitively. Uses the ``name`` of each node in the collection to sort. Typically used for sorting a ``phpDocumentor\Descriptor\Collection`` of descriptors.

.. _dump(): https://twig.symfony.com/doc/1.x/functions/dump.html
.. _Parsedown: https://parsedown.org/
