{% extends 'layout.html.twig' %}

{% block javascripts %}
	{{ block('sourceViewJS') }}
{% endblock %}

{% block content %}
	{% set swcode = random() %}
	<section class="row-fluid">
		<div class="span2 sidebar">
			{% set currentPackages = node.package %}
			{% set currentNamespace = node.namespace %}
			{{ block('sidebarMenu') }}
		</div>
	</section>
	<section class="row-fluid">
		<div class="span10 offset2">
			<div class="row-fluid">
				<div class="span8 content class">
					<h1>
						<small>{{ node.namespace|route|raw }}</small>
						<a href="#source-view" role="button" class="pull-right btn" data-toggle="modal" data-target="#source-view-{{ swcode }}"><i class="fa fa-code"></i></a>
						{{ node.name }}
					</h1>
					<p><em>{{ node.summary|markdown|raw }}</em></p>
					{{ node.description|markdown|raw }}

					{% for tagName,tags in node.tags if tagName in ['example'] %}
						{% if loop.first %}
							<h3>Examples</h3>
						{% endif %}
						{% for tag in tags %}
							<h4>{{ tag.description|escape }}</h4>
							<pre class="pre-scrollable">{{ tag.example|escape }}</pre>
						{% endfor %}
					{% endfor %}

					<section id="summary">
						<h2>Summary</h2>
						<section class="row-fluid heading">
							<section class="span4">
								<a href="#methods">Methods</a>
							</section>
							<section class="span4">
								<a href="#properties">Properties</a>
							</section>
							<section class="span4">
								<a href="#constants">Constants</a>
							</section>
						</section>
						<section class="row-fluid public">
							<section class="span4">
								{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'public' %}
									<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />
								{% else %}
									<em>No public methods found</em>
								{% endfor %}
							</section>
							<section class="span4">
								{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'public' %}
									<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />
								{% else %}
									<em>No public properties found</em>
								{% endfor %}
							</section>
							<section class="span4">
								{% for constant in node.inheritedConstants.merge(node.constants) %}
									<a href="{{ constant|route('url')}}" class="{{ constant.deprecated ? 'deprecated' }}">{{ constant.name }}</a><br />
								{% else %}
									<em>No constants found</em>
								{% endfor %}
							</section>
						</section>
						<section class="row-fluid protected">
							<section class="span4">
								{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'protected' %}
									<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />
								{% else %}
									<em>No protected methods found</em>
								{% endfor %}
							</section>
							<section class="span4">
								{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'protected' %}
									<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />
								{% else %}
									<em>No protected properties found</em>
								{% endfor %}
							</section>
							<section class="span4">
								<em>N/A</em>
							</section>
						</section>
						<section class="row-fluid private">
							<section class="span4">
								{% for method in node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) if method.visibility == 'private' %}
									<a href="{{ method|route('url')}}" class="{{ method.deprecated ? 'deprecated' }}">{{ method.name }}()</a><br />
								{% else %}
									<em>No private methods found</em>
								{% endfor %}
							</section>
							<section class="span4">
								{% for property in node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) if property.visibility == 'private' %}
									<a href="{{ property|route('url')}}" class="{{ property.deprecated ? 'deprecated' }}">${{ property.name }}</a><br />
								{% else %}
									<em>No private properties found</em>
								{% endfor %}
							</section>
							<section class="span4">
								<em>N/A</em>
							</section>
						</section>
					</section>
				</div>
				<aside class="span4 detailsbar">
					{% if node.abstract %}
						<span class="label label-info">abstract</span>
					{% endif %}
					{% if node.final %}
						<span class="label label-info">final</span>
					{% endif %}

					{% if node.deprecated %}
						<aside class="alert alert-block alert-error">
							<h4>Deprecated</h4>
							{{ node.tags.deprecated[0].description|markdown|raw }}
						</aside>
					{% endif %}

					<dl>
						<dt>File</dt>
							<dd><div class="path-wrapper"><a href="{{ node.file|route('url') }}">{{ node.path }}</a>:{{ node.line }}</div></dd>
						{% if node.package.name is not empty and node.package.name != '\\' %}
						<dt>Package</dt>
							<dd><div class="namespace-wrapper">
								{% set package = node.package %}
								{% block package_breadcrumb_element %}
									{% if package %}
										{% set child = package %}
										{% set package = package.parent %}
										{{ block('package_breadcrumb_element') }}
										<a href="{{ child|route("url") }}">{{ child.name }}</a>{% if child.name != '\\' and child.name!=node.package.name %} \ {% endif %}
									{% endif %}
								{% endblock %}
							</div></dd>
						{% endif %}
						<dt>Class hierarchy</dt>
							<dd class="hierarchy">
								{% set class = node.parent %}
								{% block hierarchy_element %}
									{% if class %}
										{% set child = class %}
										{% set class = class.parent %}
										{{ block('hierarchy_element') }}
										<div class="namespace-wrapper">└ {{ child|route|raw }}</div>
									{% endif %}
								{% endblock %}
								<div class="namespace-wrapper">└ {{ node.fullyQualifiedStructuralElementName}}</div>
							</dd>

						{% for interface in node.interfaces %}
							{% if loop.first %}
						<dt>Implements</dt>
							{% endif %}
							<dd><a href="{{ interface|route('url') }}"><div class="namespace-wrapper">{{ interface.fullyQualifiedStructuralElementName }}</div></a></dd>
						{% endfor %}

						{% for trait in node.usedTraits %}
							{% if loop.first %}
								<dt>Uses traits</dt>
							{% endif %}
							<dd>
								{% if trait.fullyQualifiedStructuralElementName %}<a href="{{ trait|route('url') }}">{% endif %}
									<div class="namespace-wrapper">{{ trait.fullyQualifiedStructuralElementName ?: trait }}</div>
								{% if trait.fullyQualifiedStructuralElementName %}</a>{% endif %}
							</dd>
						{% endfor %}

						{# TODO: expensive action; replace with an index or precompiled list in descriptors #}
{#
						{% for child in project.indexes.elements if child.parent.fullyQualifiedStructuralElementName == node.fullyQualifiedStructuralElementName %}
							{% if loop.first %}
						<dt>Children</dt>
							{% endif %}
							<dd><a href="{{ child|route('url') }}"><div class="namespace-wrapper">{{ child.fullyQualifiedStructuralElementName }}</div></a></dd>
						{% endfor %}
#}

						{% for tagName,tags in node.tags if tagName in ['link', 'see'] %}
							{% if loop.first %}
						<dt>See also</dt>
							{% endif %}
							{% for tag in tags %}
							<dd><a href="{{ tag.link }}"><div class="namespace-wrapper">{{ tag.description|markdown|raw }}</div></a></dd>
							{% endfor %}
						{% endfor %}

						{#<dt>Categories</dt>#}
							{#<dd><a href="">Assemblers</a></dd>#}
					</dl>
					<h2>Tags</h2>
					<table class="table table-condensed">
					{% for tagName,tags in node.tags if tagName not in ['link', 'see', 'abstract', 'example', 'method', 'property', 'property-read', 'property-write', 'package', 'subpackage', 'param', 'return', 'access', 'var', 'deprecated', 'throws', 'throw', 'uses'] %}
						<tr>
							<th>
								{{ tagName }}
							</th>
							<td>
								{% for tag in tags %}
									{% if tag.version %}{{ tag.version }}{% endif %}
									{{ tag.description|markdown|raw }}
								{% endfor %}
							</td>
						</tr>
					{% else %}
						<tr><td colspan="2"><em>None found</em></td></tr>
					{% endfor %}
					</table>
				</aside>
			</div>

			{% set constants = node.inheritedConstants.merge(node.constants) %}
			{% if constants|length > 0 %}
				<a id="constants" name="constants"></a>
				<div class="row-fluid">
					<div class="span8 content class">
						<h2>Constants</h2>
					</div>
					<aside class="span4 detailsbar"></aside>
				</div>
				{% for constant in constants %}
					{% set fileInfo = node %}
					{{ block('constant') }}
				{% endfor %}
			{% endif %}

			{% set properties = node.inheritedProperties.merge(node.properties.merge(node.magicProperties)) %}
			{% if properties|length > 0 %}
				<a id="properties" name="properties"></a>
				<div class="row-fluid">
					<div class="span8 content class">
						<h2>Properties</h2>
					</div>
					<aside class="span4 detailsbar"></aside>
				</div>
				{% for property in properties if property.visibility == 'public' %}
				{{ block('property') }}
				{% endfor %}
				{% for property in properties if property.visibility == 'protected' %}
				{{ block('property') }}
				{% endfor %}
				{% for property in properties if property.visibility == 'private' %}
				{{ block('property') }}
				{% endfor %}
			{% endif %}

			{% set methods = node.inheritedMethods.merge(node.methods.merge(node.magicMethods)) %}
			{% if methods|length > 0 %}
				<a id="methods" name="methods"></a>
				<div class="row-fluid">
					<div class="span8 content class"><h2>Methods</h2></div>
					<aside class="span4 detailsbar"></aside>
				</div>
				{% set fileInfo = node %}
				{% for method in methods if method.visibility == 'public' %}
				{{ block('method') }}
				{% endfor %}
				{% for method in methods if method.visibility == 'protected' %}
				{{ block('method') }}
				{% endfor %}
				{% for method in methods if method.visibility == 'private' %}
				{{ block('method') }}
				{% endfor %}
			{% endif %}
		</div>
	</section>

	{{ block('sourceView') }}
{% endblock %}
