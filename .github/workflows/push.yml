on: push
name: Qa workflow
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Restore/cache tools folder
        uses: actions/cache@v1
        with:
          path: tools
          key: all-tools-${{ github.sha }}
          restore-keys: |
            all-tools-${{ github.sha }}-
            all-tools-
      - name: composer
        uses: docker://composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: install --no-interaction --prefer-dist --optimize-autoloader
      - name: composer-require-checker
        uses: docker://phpga/composer-require-checker-ga
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: check --config-file ./composer-require-config.json composer.json
      - name: Install phive
        run: make install-phive
      - name: Install PHAR dependencies
        run: tools/phive.phar --no-progress install --copy --trust-gpg-keys 4AA394086372C20A,D2CCAC42F6295E7D,E82B2FB314E9906E --force-accept-unsigned

  phpunit-with-coverage:
    runs-on: ubuntu-latest
    name: Unit tests [7.2 | ubuntu-latest]
    needs: setup
    steps:
    - uses: actions/checkout@master
    - name: Restore/cache vendor folder
      uses: actions/cache@v1
      with:
        path: vendor
        key: all-build-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          all-build-${{ hashFiles('**/composer.lock') }}
          all-build-
    - name: Restore/cache tools folder
      uses: actions/cache@v1
      with:
        path: tools
        key: all-tools-${{ github.sha }}
        restore-keys: |
          all-tools-${{ github.sha }}-
          all-tools-
    - name: Setup PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: 7.2
        extension-csv: mbstring, intl, iconv, libxml, dom, json, simplexml, zlib
        ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
        coverage: xdebug
        pecl: false
    - name: Run PHPUnit
      run: php tools/phpunit.phar
    - name: Quick check code coverage level
      run: php tests/coverage-checker.php 60
    - name: Upload to Scrutinizer
      run: tools/ocular code-coverage:upload --format=php-clover build/logs/clover.xml

  codestyle:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Restore/cache tools folder
        uses: actions/cache@v1
        with:
          path: tools
          key: all-tools-${{ github.sha }}
          restore-keys: |
            all-tools-${{ github.sha }}-
            all-tools-
      - name: Code style check
        uses: docker://phpdoc/phpcs-ga:master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: -d memory_limit=1024M

  phpstan:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Restore/cache tools folder
        uses: actions/cache@v1
        with:
          path: tools
          key: all-tools-${{ github.sha }}
          restore-keys: |
            all-tools-${{ github.sha }}-
            all-tools-
      - name: PHPStan
        uses: docker://phpdoc/phpstan-ga:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: analyse src tests --level 4 --configuration phpstan.neon

  build-phar:
    runs-on: ubuntu-latest
    name: Build PHAR to test with
    needs:
      - setup
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: warm cache
        uses: docker://phpdoc/phar-ga:master
        with:
          args: php bin/console cache:warmup --env=prod
      - name: build phar
        uses: docker://phpdoc/phar-ga:master
        with:
          args: box compile
      - name: Upload PHAR file
        uses: actions/upload-artifact@v1
        with:
          name: phpDocumentor.phar
          path: build/phpDocumentor.phar

  behat-quick-feedback:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile:
          - default
          - phar
    name: Integration tests [${{ matrix.profile }} | 7.2 | ubuntu-latest]
    needs:
      - build-phar
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.2'
          extension-csv: mbstring, intl, iconv, libxml, dom, json, simplexml, zlib
          ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
          pecl: false
      - name: Download PHAR file
        if: matrix.profile == 'phar'
        uses: actions/download-artifact@v1
        with:
          name: phpDocumentor.phar
          path: build
      - name: Run Behat
        run: php tools/behat -p ${{ matrix.profile }}

  smoketest:
    runs-on: ubuntu-latest
    name: Smoke test
    needs:
      - build-phar
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.2'
          extension-csv: mbstring, intl, iconv, libxml, dom, json, simplexml, zlib
          ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
          pecl: false
      - name: Download PHAR file
        uses: actions/download-artifact@v1
        with:
          name: phpDocumentor.phar
          path: build
      - name: Did the download succeed?
        run: ls -hal build
      - name: Check version
        run: php ./build/phpDocumentor.phar --version
      - name: Run phpDocumentor on itself
        run: php ./build/phpDocumentor.phar

  phpunit:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        php-versions:
          - '7.2'
          - '7.3'
          - '7.4'
        exclude: # already covered in pre-test with coverage above
          - operating-system: 'ubuntu-latest'
            php-versions: '7.2'
    name: Unit tests [${{ matrix.php-versions }} | ${{ matrix.operating-system }}]
    needs:
    - phpunit-with-coverage
    - phpstan
    - codestyle
    steps:
    - uses: actions/checkout@master
    - name: Restore/cache vendor folder
      uses: actions/cache@v1
      with:
        path: vendor
        key: all-build-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          all-build-${{ hashFiles('**/composer.lock') }}
          all-build-
    - name: Restore/cache tools folder
      uses: actions/cache@v1
      with:
        path: tools
        key: all-tools-${{ github.sha }}
        restore-keys: |
          all-tools-${{ github.sha }}-
          all-tools-
    - name: Setup PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-versions }}
        extension-csv: mbstring, intl, iconv, libxml, dom, json, simplexml, zlib
        ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
        pecl: false
    - name: Run PHPUnit
      run: php tools/phpunit.phar

  behat:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        profile:
          - default
          - phar
        operating-system:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        php-versions:
          - '7.2'
          - '7.3'
          - '7.4'
        exclude: # already covered in pre-test with coverage above
          - operating-system: 'ubuntu-latest'
            php-versions: '7.2'
    name: Integration tests [${{ matrix.profile }} | ${{ matrix.php-versions }} | ${{ matrix.operating-system }}]
    needs:
      - behat-quick-feedback
      - phpstan
      - codestyle
    steps:
      - uses: actions/checkout@master
      - name: Restore/cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: all-build-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            all-build-${{ hashFiles('**/composer.lock') }}
            all-build-
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          extension-csv: mbstring, intl, iconv, libxml, dom, json, simplexml, zlib
          ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
          pecl: false
      - name: Download PHAR file
        if: matrix.profile == 'phar'
        uses: actions/download-artifact@v1
        with:
          name: phpDocumentor.phar
          path: build
      - name: Run Behat
        run: php tools/behat -p ${{ matrix.profile }}
        continue-on-error: true
